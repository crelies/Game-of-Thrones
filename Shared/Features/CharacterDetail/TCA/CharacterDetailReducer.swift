//
//  CharacterDetailReducer.swift
//  Game-of-Thrones-SwiftUI
//
//  Created Christian Elies on 17/07/2022.
//  Copyright Â© 2022 Christian Elies. All rights reserved.
//
//  Template generated by Christian Elies @crelies
//  https://www.christianelies.de
//

import ComposableArchitecture

enum CharacterDetailModule {}

extension CharacterDetailModule {
    static var reducer: Reducer<CharacterDetailState, CharacterDetailAction, CharacterDetailEnvironment> {
        .init { state, action, environment in
            switch action {
            case .onAppear:
                switch state.viewState {
                case .loaded:
                    return .none
                default: ()
                }
                return .init(value: .fetchCharacter)

            case .fetchCharacter:
                return environment.fetchCharacter(state.url)
                    .receive(on: environment.mainQueue())
                    .catchToEffect(CharacterDetailAction.characterResponse)

            case let .characterResponse(.success(character)):
                state.viewState = .loaded(character)

            case let .characterResponse(.failure(error)):
                state.viewState = .failure(error)

            default: ()
            }
            return .none
        }
    }
}
